{"version":3,"sources":["Output.js","RNGCalc.js","FractionOutput.js","DetermineCalc.js","Intro.js","App.js","registerServiceWorker.js","index.js"],"names":["Output","nextProps","this","props","calculated","react_default","a","createElement","className","attempts","probability","Component","RNGCalc","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","outcomeProb","numAttempts","calcVal","outputDisplay","handleChange","bind","assertThisInitialized","handleSubmit","probabilityCalc","event","target","value","name","setState","defineProperty","pChance","Math","pow","toFixed","calcResult","preventDefault","onSubmit","id","type","onChange","src_Output_0","shouldDisplay","FractionOutput","keyValue","listId","listItems","data","map","number","key","DetermineCalc","currentNumerator","currentDenominator","fractionArray","computedPercent","displayResults","numArray","push","parseInt","console","log","inputArray","indexVal","totalNum","i","length","sumArrayTotals","src_FractionOutput_0","IntroText","sectionName","section","sectionText","App","src_Intro","src_RNGCalc_0","src_DetermineCalc_0","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5fe9ddac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Output.css';\n\nclass Output extends Component {\n\n shouldComponentUpdate(nextProps) {\n    const differentCalculated = this.props.calculated !== nextProps.calculated;\n    return differentCalculated\n  }\n\n  render() {\n    return (\n      <div className=\"Output\">\n        <p>There is a ~<strong>{this.props.calculated}%</strong> chance of your outcome happening at least once in {this.props.attempts} attempts at {this.props.probability}% odds.</p>\n      </div>\n    )}\n  };\n\nexport default Output;\n","import React, { Component } from 'react';\nimport './RNGCalc.css';\nimport Output from './Output'\n\nclass RNGCalc extends Component {\n\n  constructor(props) {\n     super(props);\n     this.state = {\n       outcomeProb: 0,\n       numAttempts: 0,\n       calcVal: 0,\n       outputDisplay: false,\n     };\n     this.handleChange = this.handleChange.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.probabilityCalc = this.probabilityCalc.bind(this);\n   }\n\n   handleChange(event) {\n     const target = event.target;\n     const value = target.value;\n     const name = target.name;\n\n     this.setState({\n       [name]: value\n     });\n   }\n\n   probabilityCalc(probability, attempts) {\n     // equation: 1 - ( ( 1 - x ) ^ y )\n     let pChance = probability / 100;\n     let odds = (1.00 - (Math.pow((1.00 - pChance), attempts))) * 100;\n     return odds.toFixed(3);\n   }\n\n   handleSubmit(event) {\n     const calcResult = this.probabilityCalc(this.state.outcomeProb, this.state.numAttempts);\n     this.setState({calcVal: calcResult,\n     outputDisplay: true\n    });\n     event.preventDefault();\n   }\n\n   render() {\n     return (\n       <div className=\"RNGCalc\">\n         <form onSubmit={this.handleSubmit}>\n           <label>\n             Outcome Probability <br />\n           <input id=\"outcomeProb\" name=\"outcomeProb\" type=\"number\" value={this.state.outcomeProb} onChange={this.handleChange} /><span className=\"hint\">%</span>\n           </label>\n           <label>\n            Number of Attempts <br />\n             <input name=\"numAttempts\" type=\"number\" value={this.state.numAttempts} onChange={this.handleChange} />\n           </label>\n           <input type=\"submit\" value=\"Calculate\" />\n         </form>\n         {this.state.outputDisplay && <Output probability={this.state.outcomeProb} attempts={this.state.numAttempts} calculated={this.state.calcVal} shouldDisplay={this.state.outputDisplay}/>}\n       </div>\n     );\n   }\n };\n\nexport default RNGCalc;\n","import React, { Component } from 'react';\nimport './FractionOutput.css';\n\nclass FractionOutput extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n       keyValue: 0\n     };\n   }\n\n  render() {\n    let listId = 0;\n    const numbers = this.props.data;\n    const listItems = numbers.map((number) =>\n    <div className=\"fraction-entry\" key={listId++}>{number[0]} <span className=\"fraction-line\"></span> {number[1]}</div>\n    );\n\n    return (\n      <div className=\"fraction-output\">\n          {listItems}\n      </div>\n    )}\n  };\n\nexport default FractionOutput;\n","import React, { Component } from 'react';\nimport './DetermineCalc.css';\nimport FractionOutput from './FractionOutput';\n\nclass DetermineCalc extends Component {\n\n  constructor(props) {\n     super(props);\n     this.state = {\n       currentNumerator: 1,\n       currentDenominator: 1,\n       fractionArray: [],\n       computedPercent: 0\n     };\n     this.handleChange = this.handleChange.bind(this);\n     this.handleSubmit = this.handleSubmit.bind(this);\n     this.displayResults = this.displayResults.bind(this);\n   }\n\n   handleChange(event) {\n     const target = event.target;\n     const value = target.value;\n     const name = target.name;\n\n     this.setState({\n       [name]: value\n     });\n   }\n\n   handleSubmit(event) {\n     const numArray = this.state.fractionArray;\n     numArray.push([parseInt(this.state.currentNumerator, 10), parseInt(this.state.currentDenominator, 10)])\n     this.setState({\n       fractionArray: numArray\n     });\n    console.log(numArray);\n    event.preventDefault();\n   }\n    //must take nested array and number as inputs, e.g. [[1,2]], 0\n    sumArrayTotals(inputArray, indexVal) {\n      let totalNum = 1; //to avoid a divide by zero error\n      for (var i = 0; i < inputArray.length; i++) {\n        totalNum *= inputArray[i][indexVal];\n        console.log('totalNum ', totalNum);\n      }\n      return totalNum;\n    }\n\n  displayResults(event) {\n    event.preventDefault();\n    this.setState({\n      computedPercent: (this.sumArrayTotals(this.state.fractionArray, 0) / this.sumArrayTotals(this.state.fractionArray, 1) * 100).toFixed(3)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"determine-output\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Input Odds <br />\n          <input id=\"numeratorInput\" name=\"currentNumerator\" type=\"number\" value={this.state.currentNumerator} onChange={this.handleChange} /> / <input id=\"denominatorInput\" name=\"currentDenominator\" type=\"number\" value={this.state.currentDenominator} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Add to calculation\" />\n        </form>\n        <FractionOutput data={this.state.fractionArray}/>\n        <form onSubmit={this.displayResults}>\n          {this.state.fractionArray.length > 0 && <input type=\"submit\" value=\"Determine probability\" />}\n        </form>\n        {this.state.computedPercent > 0 && <p>The outcome probability of these events is ~{this.state.computedPercent}%.</p>}\n      </div>\n    )}\n  };\n\nexport default DetermineCalc;\n","import React, { Component } from 'react';\nimport './Intro.css';\n\nclass IntroText extends Component {\n\n  render() {\n    const sectionName = this.props.section;\n\n    let sectionText = null;\n    if (sectionName === 'determine') {\n      sectionText = <div className=\"App-intro\"><p>This is a tool for determining the percentage odds of an event based on one or multiple known chance events.</p><p>For example, the probability of rolling a 3 on a 6-sided die is 1/6, or 16.67%. An event that has a 1/2 followed by a 1/24 chance is 1/48, or 2.08%.</p></div>;\n    } else if (sectionName === 'probability') {\n      sectionText = <div className=\"App-intro\"><p>This is a tool for calculating the probability of getting a certain outcome at least once, within a given number of attempts.</p><p>For example, the probability of rolling a 3 on a 6-sided die is 16.67%. If you roll the die 25 times, the probability of rolling a 3 at least once is 98.95%.</p></div>;\n    } else {\n      sectionText = <p>Error in section selection.</p>\n    };\n\n    return (\n      <div>\n        {sectionText}\n      </div>\n    )};\n  };\n\nexport default IntroText;\n","import React, { Component } from 'react';\nimport './App.css';\nimport RNGCalc from './RNGCalc';\nimport DetermineCalc from './DetermineCalc';\nimport IntroText from './Intro';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"app-probability\">\n          <IntroText section=\"probability\" />\n          <RNGCalc />\n        </div>\n        <div className=\"app-determine\">\n          <IntroText section=\"determine\" />\n          <DetermineCalc />\n        </div>\n      </div>\n    )}\n  };\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}